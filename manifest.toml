id = "embassy-pages"
title = "Embassy Pages"
version = "0.1.3"
release-notes = "Upgrade to EmbassyOS v0.3.0"
license = "mit"
wrapper-repo = "https://github.com/Start9Labs/embassy-pages-wrapper"
upstream-repo = "https://github.com/Start9Labs/embassy-pages-wrapper"
support-site = "https://matrix.to/#/!lMnRwPWnyQvOfAoEnD:matrix.start9labs.com?via=matrix.start9labs.com&via=matrix.org&via=hnitbjorg.xyz" 
build = ["make"]
min-os-version = "0.3.0"

[description]
long = "Embassy Pages is a simple web server that uses directories inside File Browser to serve Tor websites."
short = "Create Tor websites, hosted on your Embassy."

[assets]
license = "LICENSE"
icon = "icon.png"
instructions = "instructions.md"
docker-images = "image.tar"

[main]
type = "docker"
image = "main"
entrypoint = "/usr/local/bin/docker_entrypoint.sh"
args = []
# specifices where to put the volumes
mounts = { filebrowser = "/mnt/filebrowser" }
io-format = "yaml"

[health-checks]

[config.get]
type = "docker"
image = "compat"
system = true
entrypoint = "compat"
# TODO edit compat code to take an absolute path as third arg (for config.get.args)	
args = ["config", "get", "/root/start9/config.yaml", "/mnt/assets/config_spec.yaml"]
mounts = { compat = "/mnt/assets", main = "/root" }
io-format = "yaml"

[config.set]
type = "docker"
image = "compat"
system = true
entrypoint = "compat"
args = ["config", "set", "/root/start9/config.yaml"]
mounts = { main = "/root" }
io-format = "yaml"

[dependencies.filebrowser]
version = "^2.14.1.1"
description = "Used to upload files to serve."
critical = false
recommended = true

[volumes.main]
type = "data"

[volumes.filebrowser]
type = "pointer"
package-id = "filebrowser"
volume-id = "main"
path = "/"
readonly = true

[volumes.compat]
type = "assets"

[interfaces.main]
name = "Homepage"
description = "The homepage... (TODO)"
tor-config = { port-mapping = { "80" = "80" } }
ui = true
protocols = ["tcp", "http"]

[backup.create]
type = "docker"
image = "compat"
system = true
entrypoint = "true"
args = []
mounts = {}

[backup.restore]
type = "docker"
image = "compat"
system = true
entrypoint = "true"
args = []
mounts = {}
